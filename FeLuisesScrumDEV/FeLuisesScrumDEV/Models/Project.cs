//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FeLuisesScrumDEV.Models
{
    using FeLuisesScrumDEV.Controllers;
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;

    public partial class Project
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Project()
        {
            this.Module = new HashSet<Module>();
            this.WorksIn = new HashSet<WorksIn>();
        }
        [Key]
        public int idProjectPK { get; set; }
        [MaxLength(20, ErrorMessage = "Project's name cant be longer than 20 characters.")]
        [Required(ErrorMessage ="Project's name is obligatory.")]
        public string projectName { get; set; }
        [MaxLength(256, ErrorMessage = "Project's name cant be longer than 256 characters.")]
        [Required(ErrorMessage = "Project's objective is obligatory.")]
        public string objective { get; set; }
        [RegularExpression(@"^\d{1,18}.\d{0,2}$", ErrorMessage = "Budget must contain no more than 18 integers and 2 decimals.")]
        [Range(0, 9999999999999999.99)]
        public Nullable<decimal> estimatedCost { get; set; }
        [RegularExpression(@"^\d{1,18}.\d{0,2}$", ErrorMessage = "Budget must contain no more than 18 integers and 2 decimals.")]
        [Range(0, 9999999999999999.99)]
        public Nullable<decimal> realCost { get; set; }

        [Required(ErrorMessage = "Must enter a starting date.")]
        [DataType(DataType.DateTime)]
        [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = "{0:MM/dd/yyyy}")]
        public Nullable<System.DateTime> startingDate { get; set; }
        [DataType(DataType.DateTime, ErrorMessage = "Invalid format, valid format is yyyy/MM/dd")]
        [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = "{0:MM/dd/yyyy}")]
        public Nullable<System.DateTime> finishingDate { get; set; }
        [RegularExpression(@"^\d{1,18}.\d{0,2}$", ErrorMessage ="Budget must contain no more than 18 integers and 2 decimals.")]
        [Range(0, 9999999999999999.99)]
        public Nullable<decimal> budget { get; set; }
        [ReadOnly(true)]
        [Range(0, 9999999999999999)]
        public Nullable<int> estimatedDuration { get; set; }
        public string idClientFK { get; set; }
    
        public virtual Client Client { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Module> Module { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<WorksIn> WorksIn { get; set; }
    }
}

