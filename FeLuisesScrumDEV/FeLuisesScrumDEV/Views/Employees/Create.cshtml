<!DOCTYPE html>
<html>
@model FeLuisesScrumDEV.Models.Employee
<head>

    @{
        ViewBag.Title = "Create";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    <link href="~/FeStyles/feLuisesStyles.css" rel="stylesheet" type="text/css">

    <script>
        $(document).ready(function () {
            getProvincia(null);
        });
    </script>
    <script>
        $(document).ready(function () {
            $.ajax({
                dataType: "json",
                data{},
                url: "https://ubicaciones.paginasweb.cr/provincia/",
                success: function (data) {
                    $("#province").html(data[@Html.DisplayFor(model => model.province)]);
                }
            });
            $.ajax({
                dataType: "json",
                url: "https://ubicaciones.paginasweb.cr/provincia/" + @Html.DisplayFor(model => model.province) + "/cantones.json",
                data: {},
                success: function (data) {
                    $("#canton").html(data[@Html.DisplayFor(model => model.canton)]);
                }
            });
            $.ajax({
                dataType: "json",
                url: "https://ubicaciones.paginasweb.cr/provincia/" + @Html.DisplayFor(model => model.province) + "/canton/"+@Html.DisplayFor(model => model.canton)+"/distritos.json",
                data: {},
                success: function (data) {
                    $("#district").html(data[@Html.DisplayFor(model => model.district)]);
                }
            });
        });
    </script>

</head>

<body>
    @if (Session["userName"] == null && Convert.ToInt32(Session["userRole"]) != 0)
    {

        <div class="container">

            <div class="card">
                <div class="card-header">
                    <h2 id="heading-red">No se vale hackear!</h2>
                </div>
                <div class="card-body">
                    <h5 class="card-title">Debe logguearse para hacer uso de la aplicación</h5>
                    <a href=@Url.Action("Index", "Login") class="btn btn-danger">Volver</a>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="container">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="card border-dark rounded" id="shadow-Fe1" style="width:auto; height:auto;">
                    <h2 class="card-header text-white" id="back-Fe1">Agregar Empleado</h2>
                    <div class="card-body">

                        <div class="form">
                            <div class="form-row">
                                <div class="col">
                                    <div class="form-group">
                                        <b>Cédula</b>
                                        @*@Html.LabelFor(model => model.idEmployeePK, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.idEmployeePK, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.idEmployeePK, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <b>Nombre</b>
                                        @*@Html.LabelFor(model => model.employeeName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.employeeName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.employeeName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <b>Apellido</b>
                                        @*@Html.LabelFor(model => model.employeeLastName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.employeeLastName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.employeeLastName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <b>Segundo Apellido</b>
                                        @* @Html.LabelFor(model => model.employeeSecondLastName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.employeeSecondLastName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.employeeSecondLastName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <b>Fecha de nacimiento</b>
                                        @*@Html.LabelFor(model => model.employeeBirthDate, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.employeeBirthDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                            @Html.ValidationMessageFor(model => model.employeeBirthDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div> <!--Fin de col-->

                                <div class="col">

                                    <div class="form-group">
                                        <b>Provincia</b>
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.province, Enumerable.Empty<SelectListItem>(), "--Provincia--", new { @class = "form-control", onchange = "getCanton(null,null)" })
                                            @Html.ValidationMessageFor(model => model.province, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <b>Cantón</b>
                                        @*@Html.LabelFor(model => model.canton, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.canton, Enumerable.Empty<SelectListItem>(), "--Cantón--", new { @class = "form-control", onchange = "getDistrict(null, null, null)" })
                                            @Html.ValidationMessageFor(model => model.canton, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <b>Distrito</b>
                                        @*@Html.LabelFor(model => model.district, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.district, Enumerable.Empty<SelectListItem>(), "--Distrito--", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.district, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <b>Dirección exacta</b>
                                        @*@Html.LabelFor(model => model.exactDirection, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.exactDirection, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.exactDirection, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                </div>

                                <div class="col">

                                    <div class="form-group">
                                        <div class="form-group">
                                            <b>Teléfono</b>
                                            @*@Html.LabelFor(model => model.tel, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.tel, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.tel, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <b>E-mail</b>
                                            @*@Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <b>Fecha de ingreso</b>
                                        @*@Html.LabelFor(model => model.employeeHireDate, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.employeeHireDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                            @Html.ValidationMessageFor(model => model.employeeHireDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <b>Tipo de empleado</b>
                                        @*@Html.LabelFor(model => model.developerFlag, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.developerFlag, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.developerFlag, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <b>Precio por hora</b>
                                        @*@Html.LabelFor(model => model.pricePerHour, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.pricePerHour, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.pricePerHour, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <b>Disponibilidad</b>
                                        @*@Html.LabelFor(model => model.availability, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.availability, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.availability, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div><!--Fin de col-->
                            </div> <!--Fin del form-row-->
                        </div><!--Final de form-->
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    </div>

                    <div class="card-footer" id="back-Fe1">
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <a class="btn" role="button" href="@Url.Action("Index", "Employees", null)">
                                    <img src="~/Images/b-back.svg" width="30" height="30" class="d-inline-block align-top" alt="">
                                </a>

                                <input type="image" src="~/Images/b-save.svg" width="45" height="45" class="btn btn btn-outline-success" alt="Submit" />

                                <a class="btn btn-outline-danger" role="button" href="@Url.Action("Create", "Employees")">
                                    <img src="~/Images/clean.svg" width="25" height="25" class="d-inline-block align-top" alt="">
                                </a>

                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</body>
</html>