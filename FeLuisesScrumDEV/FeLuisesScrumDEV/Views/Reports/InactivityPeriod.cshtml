<!DOCTYPE html>
<html>
<head>
    @model FeLuisesScrumDEV.viewModel.GetDatePickers
    @{
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    <link href="~/FeStyles/feLuisesStyles.css" rel="stylesheet" type="text/css">
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>Periodos de inactividad</title>

    <script>
        function formatDate(input) {
            var datePart = input.match(/\d+/g),
                year = datePart[0],
                month = datePart[1],
                day = datePart[2];
            return month + '/' + day + '/' + year;
        }

        function getPeriods() {
            var idEmployee = document.getElementById("EmployeeSelect").value;
            var inputStart = document.getElementById('Start').value;
            var inputEnd = document.getElementById('End').value;
            var rangeDates = [];
            rangeDates.push(formatDate(inputStart));
            rangeDates.push(formatDate(inputEnd));
            //console.log(inputStart);
            //console.log(inputEnd);
			$.ajax({
                    type: "post",
                    dataType: "json",
                    url: '@Url.Action("BringPeriod", "Reports")',
                    traditional: true,
                    async: false,
                    data: {
                        currentEmployee: idEmployee,
                        range: rangeDates
                    },
                    success: function (json) {
                        var myArray = json.myArray;
                        console.log(myArray);
                        var table = document.getElementById("myTable");
                        //if (myArray.length != 0) {
                            var periodo = "";
                            var Total = 0;
                            var aux = "";
                            var date1;
                            var date2;
                            var difDates;
                            table.innerHTML = " <tr><td><b>Períodos</b></td><td><b>Horas</b></td></tr>";
                            for (var i = 0; i < myArray.length; i++) {
                                periodo = "";
                                if (i % 2 === 0) {
                                    date1 = new Date(myArray[i]);
                                    aux = myArray[i] + " - ";
                                } else {
                                    periodo = aux + myArray[i];
                                    console.log(periodo);
                                    date2 = new Date(myArray[i]);
                                    difDates = (date2.getTime() - date1.getTime()) / (3600 * 1000);
                                    var row = table.insertRow();
                                    var cell1 = row.insertCell(0);
                                    var cell2 = row.insertCell(1);
                                    cell1.innerHTML = periodo;
                                    cell2.innerHTML = difDates;
                                    Total += difDates;
                                    aux = "";
                                }
                            }
                            var row = table.insertRow();
                            var cell1 = row.insertCell(0);
                            var cell2 = row.insertCell(1);
                            cell1.innerHTML = "<b>Total horas</b>";
                            cell2.innerHTML = "<b>" + Total + "</b>";

                        //} else {
                        //    var row = table.insertRow();
                        //    var cell1 = row.insertCell(0);
                        //    cell1.innerHTML = "<b>No se encontraron periodos en el rango</b>";
                        //}
                    },
                    error: function (errorList) {
                        console.log(errorList);
                    }
            })
         }
    </script>

</head>
<body>

	@if (Session["userName"] == null && (Convert.ToInt32(Session["userRole"]) != 0))
	{
		<div class="container">

			<div class="card">
				<div class="card-header">
					<h2 id="heading-red">No se vale hackear!</h2>
				</div>
				<div class="card-body">
					<h5 class="card-title">Debe logguearse para hacer uso de la aplicación</h5>
					<a href=@Url.Action("Index", "Login") class="btn btn-danger">Volver</a>
				</div>
			</div>
		</div>
	}else{
        <div class="container">
            <h3>Periodos de desocupación desarrolladores</h3>
            <br />
            <br />
            @*@using (Html.BeginForm())
            {*@
                
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <h4>Fecha inicio</h4>
                        @Html.EditorFor(model => model.Start_Range, new { htmlAttributes = new { @class = "form-control", type = "date", @id = "Start" } })
                        @Html.ValidationMessageFor(model => model.Start_Range, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div class="col-md-4">
                    <div class="form-group">
                        <h4>Fecha final</h4>
                        @Html.EditorFor(model => model.End_Range, new { htmlAttributes = new { @class = "form-control", type = "date", @id = "End" } })
                        @Html.ValidationMessageFor(model => model.End_Range, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div class="col-md-4">
                    <div class="form-group">
                        <h4>Desarrollador</h4>
                        @Html.DropDownList("idEmployeePK", null, htmlAttributes: new { @class = "form-control", @id = "EmployeeSelect", @onchange = "getPeriods()", @value = "Desarrolladores" })
                    </div>
                </div>
            </div>   

            <h4 id="employeeName"></h4>

            <br />
            @*class="table table-striped table-bordered"*@
            <table id="myTable" class="table table-striped table-bordered">
                <tr>
                    <td>
                        <b>Períodos</b>
                    </td>
                    <td>
                        <b>Horas</b>
                    </td>
                </tr>
            </table>
        </div>
	
	}
    <br/>
</body>
</html>
