<html>
@model FeLuisesScrumDEV.Models.Requeriment
<head>
    @{
        ViewBag.Title = "Create";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    <link href="~/FeStyles/feLuisesStyles.css" rel="stylesheet" type="text/css">
</head>

<body>
    <div class="container">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="card border-dark shadow rounded" style="width: auto; height: auto;">
                <h2 class="card-header text-white" id="back-Fe1">Crear Requerimiento</h2>
                <div class="card-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-horizontal">
                            <div class="form-group row">
                                @Html.LabelFor(model => model.idProjectFKPK, "Perteneciente al proyecto", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.HiddenFor(model => model.idProjectFKPK)
                                    @Html.DisplayFor(model => model.Module.Project.projectName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.idProjectFKPK, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.idModuleFKPK, "Perteneciente al módulo", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.HiddenFor(model => model.idModuleFKPK)
                                    @Html.DisplayFor(model => model.Module.name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.idModuleFKPK, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.objective, "Objetivo", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.objective, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.objective, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.complexity, "Complejidad", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("complexity", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.complexity, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.estimatedDuration, "Duración estimada", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.estimatedDuration, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.estimatedDuration, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.realDuration, "Duración real", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.realDuration, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.realDuration, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.status, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("status", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.startingDate, "Fecha de inicio de trabajo", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.startingDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                    @Html.ValidationMessageFor(model => model.startingDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.endDate, "Fecha de fin de trabajo", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.endDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                    @Html.ValidationMessageFor(model => model.endDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.idEmployeeFK, "Empleado asignado", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("idEmployeeFK", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idEmployeeFK, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="card-footer" id="back-Fe1">
                    <a class="btn" role="button" href="@Url.Action("Index", "Requeriments")">
                        <img src="~/Images/b-back.svg" width="30" height="30" class="d-inline-block align-top" alt="">
                    </a>
                    <input type="image" src="~/Images/accept.svg" class="btn btn btn-outline-success" alt="Submit">
                    <a class="btn btn-outline-danger" role="button" href="@Url.Action("Index", "Requeriments")">
                        <img src="~/Images/cancel.svg" width="25" height="25" class="d-inline-block align-top" alt="">
                    </a>
                </div>
            </div>


        }
    </div>
</body>
</html>
