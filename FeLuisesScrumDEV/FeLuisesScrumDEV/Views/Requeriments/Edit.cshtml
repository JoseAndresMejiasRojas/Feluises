<html>
@model FeLuisesScrumDEV.Models.Requeriment
<head>
    @{
        ViewBag.Title = "Edit";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    <link href="~/FeStyles/feLuisesStyles.css" rel="stylesheet" type="text/css">
</head>

<body>
    <h2>Edit</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Requeriment</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.idProjectFKPK)

    @Html.HiddenFor(model => model.idModuleFKPK)

    @Html.HiddenFor(model => model.idRequerimentPK)

    <div class="form-group">
        @*@Html.LabelFor(model => model.idEmployeeFK, "idEmployeeFK", htmlAttributes: new { @class = "control-label col-md-2" })*@
        <b>Nombre del empleado</b>
        <div class="col-md-10">
            @Html.DropDownList("idEmployeeFK", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.idEmployeeFK, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.estimatedDuration, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <b>Duracion estimada</b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.estimatedDuration, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.estimatedDuration, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.realDuration, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <b>Duracion real</b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.realDuration, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.realDuration, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <b>Estado</b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.startingDate, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <b>Fecha de inicio</b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.startingDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
            @Html.ValidationMessageFor(model => model.startingDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.endDate, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <b>Fecha de finalización</b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.endDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
            @Html.ValidationMessageFor(model => model.endDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.complexity, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <b>Complejidad</b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.complexity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.complexity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.objective, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <b>Objetivo</b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.objective, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.objective, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="image" src="~/Images/save.svg" class="btn btn btn-outline-success" alt="Submit" />
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>