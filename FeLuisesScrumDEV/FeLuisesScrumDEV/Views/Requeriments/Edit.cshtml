<html>
@model FeLuisesScrumDEV.Models.Requeriment
<head>
    @{
        ViewBag.Title = "Edit";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    <link href="~/FeStyles/feLuisesStyles.css" rel="stylesheet" type="text/css">
</head>

<body>
    <div class="container">


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="card border-dark rounded" id="shadow-Fe1" style="width:auto; height:auto;">
                <h2 class="card-header text-white" id="back-Fe1">Editar Empleado</h2>
                <div class="card-body">

                    <div class="form">
                        <div class="form-row">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.idProjectFKPK)

                            @Html.HiddenFor(model => model.idModuleFKPK)

                            @Html.HiddenFor(model => model.idRequerimentPK)
                            <div class="col">
                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.idEmployeeFK, "idEmployeeFK", htmlAttributes: new { @class = "control-label col-md-2" })*@
                                    <b>Nombre del empleado</b>
                                    <div class="col-md-10">
                                        @Html.DropDownList("idEmployeeFK", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.idEmployeeFK, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.estimatedDuration, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                    <b>Duracion estimada</b>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.estimatedDuration, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.estimatedDuration, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.realDuration, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                    <b>Duracion real</b>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.realDuration, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.realDuration, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.status, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })*@
                                    <b>Estado</b>
                                    <div class="col-md-10">
                                        @Html.DropDownList("status", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <!--
                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                    <b>Estado</b>
                                    <div class="col-md-10">
                                        @*@Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })*@
                                    </div>
                                </div>
                                -->
                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.startingDate, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                    <b>Fecha de inicio</b>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.startingDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                        @Html.ValidationMessageFor(model => model.startingDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.endDate, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                    <b>Fecha de finalización</b>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.endDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                        @Html.ValidationMessageFor(model => model.endDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.complexity, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                    <b>Complejidad</b>
                                    <div class="col-md-10">
                                        @Html.DropDownList("complexity", null, htmlAttributes: new { @class = "form-control" })
                                        @*@Html.EditorFor(model => model.complexity, new { htmlAttributes = new { @class = "form-control" } })*@
                                        @Html.ValidationMessageFor(model => model.complexity, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.objective, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                    <b>Objetivo</b>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.objective, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.objective, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                        </div> <!--finalde form-row-->
                    </div>
                </div>
                <div class="card-footer" id="back-Fe1">
                    <div class="form-group">
                        <div class="col-md-offset-5 col-md-20">
                            <input type="image" src="~/Images/save.svg" class="btn btn btn-outline-success" alt="Submit" />
                            <a class="btn btn-outline-danger" role="button" href="@Url.Action("Details", "Requeriments", new { idProjectFKPK=Model.idProjectFKPK, idModuleFKPK=Model.idModuleFKPK, idRequerimentPK=Model.idRequerimentPK  })">
                                <!--Mandar el id-->
                                <img src="~/Images/cancel.svg" width="25" height="25" class="d-inline-block align-top" alt="">
                            </a>

                        </div>

                    </div>
                </div>

            </div>
        }
    </div>
</body>
</html>
